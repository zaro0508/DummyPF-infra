# This CF script is for creating an AWS elastic beanstalk application.
#
# Usage:
#   1. Run the boostrap script to setup required resources for the app.
#   2. Create the app with `aws cloudformation --create-stack` command
#   3. Update the stack with `aws cloudformation --update-stack` command
#
# initial creation:
#   aws --profile aws.admin.user --region us-east-1 cloudformation \
#     create-stack --stack-name foo-develop --capabilities CAPABILITY_NAMED_IAM \
#     --on-failure DELETE --template-body file://cf_templates/cf_bridgepf.yml \
#     --parameters ParameterKey=AppDeployBucket,ParameterValue=org-sagebridge-bridgepf-deployment-foo-develop \
#     --parameters ParameterKey=EC2InstanceType,ParameterValue=t2.micro \
#     ...[all params neeeded for app]
#
# updates:
#   aws --profile aws.bootstrap.user --region us-east-1 cloudformation \
#     update-stack --stack-name foo-develop --capabilities CAPABILITY_NAMED_IAM \
#     --template-body file://cf_templates/cf_bridgepf.yml \
#     --parameters ParameterKey=AppDeployBucket,ParameterValue=org-sagebridge-bridgepf-deployment-foo-develop \
#     --parameters ParameterKey=EC2InstanceType,ParameterValue=t2.micro \
#     ...[all params neeeded for app]
#
Description: AWS Elastic Beanstalk Application
AWSTemplateFormatVersion: 2010-09-09
Outputs:
  AppDashboard:
    Value: !Ref AWSCWDashboard
    Export:
      Name: !Sub '${AWS::StackName}-Dashboard'
  AppPublicEndpoint:
    Value: !Join
      - ''
      - - 'https://'
        - !Ref DNSHostname
        - .
        - !Ref DNSDomain
    Export:
      Name: !Sub '${AWS::StackName}-AppPublicEndpoint'
  AWSS3AppDeployBucket:
    Value: !Ref AWSS3AppDeployBucket
    Export:
      Name: !Sub '${AWS::StackName}-AppDeployBucket'
  AWSEBApplication:
    Value: !Ref AWSEBApplication
    Export:
      Name: !Sub '${AWS::StackName}-Application'
  AWSEBEnvironment:
    Value: !Ref AWSEBEnvironment
    Export:
      Name: !Sub '${AWS::StackName}-Environment'
  AWSEBEnvironmentUrl:
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - AWSEBEnvironment
          - EndpointURL
    Export:
      Name: !Sub '${AWS::StackName}-EnvironmentUrl'
  AWSECacheUrl:
    Value: !Join
      - ''
      - - 'redis://'
        - !GetAtt AWSECCacheCluster.RedisEndpoint.Address
        - ':'
        - !GetAtt AWSECCacheCluster.RedisEndpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-ElastiCacheUrl'
  AWSIAMBridgepfServiceUserAccessKeyId:
    Value: !Ref AWSIAMBridgepfServiceUserAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-BridgepfServiceUserAccessKey'
  AWSIAMBridgepfServiceUserSecretAccessKeyId:
    Value: !GetAtt AWSIAMBridgepfServiceUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-BridgepfServiceUserSecretAccessKeyId'
  AttachmentBucket:
    Value: !Ref AttachmentBucket
    Export:
      Name: !Sub '${AWS::StackName}-AttachmentBucket'
  ConsentsBucket:
    Value: !Ref ConsentsBucket
    Export:
      Name: !Sub '${AWS::StackName}-ConsentsBucket'
  UploadBucket:
    Value: !Ref UploadBucket
    Export:
      Name: !Sub '${AWS::StackName}-UploadBucket'
  UploadCmsCertBucket:
    Value: !Ref UploadCmsCertBucket
    Export:
      Name: !Sub '${AWS::StackName}-UploadCmsCertBucket'
  UploadCmsPrivBucket:
    Value: !Ref UploadCmsPrivBucket
    Export:
      Name: !Sub '${AWS::StackName}-UploadCmsPrivBucket'
Mappings:
  AWSLoadbalancerAccount:
    us-east-1:
      ARN: '127311923021'
    us-west-2:
      ARN: '797873946194'
    us-west-1:
      ARN: 027434742980
    eu-west-1:
      ARN: '156460612806'
    eu-central-1:
      ARN: 054676820928
    ap-southeast-1:
      ARN: '114774131450'
    ap-northeast-1:
      ARN: '582318560864'
    ap-southeast-2:
      ARN: '783225319266'
    ap-northeast-2:
      ARN: '600734575887'
    sa-east-1:
      ARN: '507241528517'
Parameters:
  AppDeployBucket:
    Type: String
    Default: param_place_holder
  AppHealthcheckUrl:
    Type: String
    Description: The AWS EB health check path
    Default: param_place_holder
  AuthCreateMysqlAccounts:
    Type: String
    Default: param_place_holder
  AuthProvider:
    Type: String
    Default: param_place_holder
  AwsAutoScalingGroupName:
    Type: String
    Default: param_place_holder
  AwsAutoScalingMaxSize:
    Type: String
    Default: param_place_holder
  AwsAutoScalingMinSize:
    Type: String
    Default: param_place_holder
  AwsDefaultVpcId:
    Description: The AWS account's default VPC id
    Type: String
    Default: param_place_holder
  AwsEbHealthReportingSystem:
    Type: String
    Default: param_place_holder
  AwsSnsNotificationEndpoint:
    Type: String
    Description: Email address for AWS SNS notifications
    Default: param_place_holder
    NoEcho: true
  AwsKey:
    Type: String
    Default: param_place_holder
  AwsKeyConsents:
    Type: String
    Default: param_place_holder
  AwsKeyUpload:
    Type: String
    Default: param_place_holder
  AwsKeyUploadCms:
    Type: String
    Default: param_place_holder
  AwsSecretKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsLoadBalancerName:
    Type: String
    Default: param_place_holder
  AwsSecretKeyConsents:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsSecretKeyUpload:
    Type: String
    Default: param_place_holder
    NoEcho: true
  AwsSecretKeyUploadCms:
    Type: String
    Default: param_place_holder
    NoEcho: true
  BridgeEnv:
    Type: String
    Default: param_place_holder
  BridgeHealthcodeRedisKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  BridgeUser:
    Type: String
    Default: param_place_holder
  DNSDomain:
    Type: String
    Description: DNS Domain name for deployment
    Default: param_place_holder
  DNSHostname:
    Type: String
    Description: DNS Hostname for deployment
    Default: param_place_holder
  EC2InstanceType:
    Type: String
    Description: Instance type to use for Elastic Beanstalk Instances
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - cr1.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - cc1.4xlarge
      - cc2.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - cg1.4xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - f1.2xlarge
      - f1.16xlarge
  EmailUnsubscribeToken:
    Type: String
    Default: param_place_holder
  ElastiCacheInstanceType:
    Type: String
    Description: Instance type to use for Elastic Cache cluster
    Default: cache.t2.micro
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m3.medium
      - cache.m3.large
      - cache.m3.xlarge
      - cache.m3.2xlarge
      - cache.r3.large
      - cache.r3.xlarge
      - cache.r3.2xlarge
      - cache.r3.4xlarge
      - cache.r3.8xlarge
  HibernateConnectionPassword:
    Type: String
    Default: param_place_holder
    NoEcho: true
  HibernateConnectionUrl:
    Type: String
    Default: param_place_holder
  HibernateConnectionUsername:
    Type: String
    Default: param_place_holder
  HibernateConnectionUsessl:
    Type: String
    Default: param_place_holder
  JavaOpts:
    Type: String
    Default: param_place_holder
  NewRelicAppName:
    Type: String
    Default: param_place_holder
  NewRelicLicenseKey:
    Type: String
    Default: param_place_holder
    NoEcho: true
  SnsKey:
    Type: String
    Default: param_place_holder
  SnsSecretKey:
    Type: String
    NoEcho: true
    Default: param_place_holder
  SSLCertArn:
    Description: SSL certificate for load balancer
    Type: String
    Default: param_place_holder
  SynapseApiKey:
    Type: String
    Default: param_place_holder
  SynapseUser:
    Type: String
    Default: param_place_holder
  SysopsEmail:
    Type: String
    Default: param_place_holder
  WebServicesUrl:
    Type: String
    Default: param_place_holder
  AttachmentBucket:
    Type: String
    Default: param_place_holder
  ConsentsBucket:
    Type: String
    Default: param_place_holder
  UploadBucket:
    Type: String
    Default: param_place_holder
  UploadCmsCertBucket:
    Type: String
    Default: param_place_holder
  UploadCmsPrivBucket:
    Type: String
    Default: param_place_holder
  HostPostFix:
    Type: String
    Default: param_place_holder
Resources:
  AWSEBConfigurationTemplate:
    Type: 'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName: !Ref AWSEBApplication
      SolutionStackName: 64bit Amazon Linux 2017.03 v2.5.2 running Java 8
      OptionSettings:
        # EB environment options
        - Namespace: 'aws:autoscaling:asg'
          OptionName: MaxSize
          Value: !Ref AwsAutoScalingMaxSize
        - Namespace: 'aws:autoscaling:asg'
          OptionName: MinSize
          Value: !Ref AwsAutoScalingMinSize
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref AWSIAMInstanceProfile
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: InstanceType
          Value: !Ref EC2InstanceType
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: SecurityGroups
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - AWSEC2SecurityGroup
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateEnabled
          Value: true
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateType
          Value: 'Immutable'
        - Namespace: 'aws:elasticbeanstalk:application'
          OptionName: Application Healthcheck URL
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: StreamLogs
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: DeleteOnTerminate
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: RetentionInDays
          Value: '90'
        - Namespace: 'aws:elasticbeanstalk:command'
          OptionName: DeploymentPolicy
          Value: 'Immutable'
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !Ref AWSIAMServiceRole
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: Protocol
          Value: 'HTTP'
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: HealthCheckPath
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elasticbeanstalk:healthreporting:system'
          OptionName: SystemType
          Value: !Ref AwsEbHealthReportingSystem
        - Namespace: 'aws:elasticbeanstalk:hostmanager'
          OptionName: LogPublicationControl
          Value: true
        - Namespace: 'aws:elasticbeanstalk:xray'
          OptionName: XRayEnabled
          Value: false
        - Namespace: 'aws:elb:loadbalancer'
          OptionName: LoadBalancerHTTPPort
          Value: 80
        - Namespace: 'aws:elb:healthcheck'
          OptionName: Target
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elb:listener:443'
          OptionName: ListenerProtocol
          Value: HTTPS
        - Namespace: 'aws:elb:listener:443'
          OptionName: InstanceProtocol
          Value: HTTP
        - Namespace: 'aws:elb:listener:443'
          OptionName: InstancePort
          Value: '80'
        - Namespace: 'aws:elb:listener:443'
          OptionName: SSLCertificateId
          Value: !Ref SSLCertArn
        # Application environment options
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: APP_DEPLOY_BUCKET
          Value: !Ref AppDeployBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _ATTACHMENT_BUCKET
          Value: !Ref AttachmentBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AUTH_CREATE_MYSQL_ACCOUNTS
          Value: !Ref AuthCreateMysqlAccounts
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AUTH_PROVIDER
          Value: !Ref AuthProvider
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY
          Value: !Ref AwsKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY_CONSENTS
          Value: !Ref AwsKeyConsents
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY_UPLOAD
          Value: !Ref AwsKeyUpload
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_KEY_UPLOAD_CMS
          Value: !Ref AwsKeyUploadCms
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY
          Value: !Ref AwsSecretKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_CONSENTS
          Value: !Ref AwsSecretKeyConsents
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_UPLOAD
          Value: !Ref AwsSecretKeyUpload
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: AWS_SECRET_KEY_UPLOAD_CMS
          Value: !Ref AwsSecretKeyUploadCms
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_ENV
          Value: !Ref BridgeEnv
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_HEALTHCODE_REDIS_KEY
          Value: !Ref BridgeHealthcodeRedisKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGE_USER
          Value: !Ref BridgeUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGEPF_SERVICE_USER_KEY
          Value: !Ref AWSIAMBridgepfServiceUserAccessKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: BRIDGEPF_SERVICE_USER_SECRET_KEY
          Value: !GetAtt AWSIAMBridgepfServiceUserAccessKey.SecretAccessKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _CONSENTS_BUCKET
          Value: !Ref ConsentsBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: EMAIL_UNSUBSCRIBE_TOKEN
          Value: !Ref EmailUnsubscribeToken
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ELASTICACHE_URL
          Value: !Join
            - ''
            - - 'redis://'
              - !GetAtt AWSECCacheCluster.RedisEndpoint.Address
              - ':'
              - !GetAtt AWSECCacheCluster.RedisEndpoint.Port
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_PASSWORD
          Value: !Ref HibernateConnectionPassword
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_URL
          Value: !Ref HibernateConnectionUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_USERNAME
          Value: !Ref HibernateConnectionUsername
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: HIBERNATE_CONNECTION_USESSL
          Value: !Ref HibernateConnectionUsessl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: JAVA_OPTS
          Value: !Ref JavaOpts
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_APP_NAME
          Value: !Ref NewRelicAppName
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: REDISCLOUD_URL
          Value: !Join
            - ''
            - - 'redis://'
              - !GetAtt AWSECCacheCluster.RedisEndpoint.Address
              - ':'
              - !GetAtt AWSECCacheCluster.RedisEndpoint.Port
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SNS_KEY
          Value: !Ref SnsKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SNS_SECRET_KEY
          Value: !Ref SnsSecretKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYNAPSE_API_KEY
          Value: !Ref SynapseApiKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYNAPSE_USER
          Value: !Ref SynapseUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SYSOPS_EMAIL
          Value: !Ref SysopsEmail
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _UPLOAD_BUCKET
          Value: !Ref UploadBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _HOST_POSTFIX
          Value: !Ref HostPostfix
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _UPLOAD_CMS_CERT_BUCKET
          Value: !Ref UploadCmsCertBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _UPLOAD_CMS_PRIV_BUCKET
          Value: !Ref UploadCmsPrivBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - _WEBSERVICES_URL
          Value: !Ref WebServicesUrl
  AWSEBApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - application
  AWSEBEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !Ref AWSEBApplication
      TemplateName: !Ref AWSEBConfigurationTemplate
      EnvironmentName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
      Tier:
        Name: WebServer
        Type: Standard
  AWSS3AppDeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref AppDeployBucket
  AWSR53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Join
        - ''
        - - !Ref DNSDomain
          - .
      Name: !Join
        - ''
        - - !Ref DNSHostname
          - .
          - !Ref DNSDomain
          - .
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt
          - AWSEBEnvironment
          - EndpointURL
  AWSR53HealthCheck:
    Type: "AWS::Route53::HealthCheck"
    DependsOn: AWSR53RecordSet
    Properties:
      HealthCheckConfig:
        FullyQualifiedDomainName: !GetAtt AWSEBEnvironment.EndpointURL
        Port: "443"
        Type: "HTTPS"
        ResourcePath: "/?study=api"
      HealthCheckTags:
        -
          Key: "Name"
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - AWSR53HealthCheck
  AWSIAMServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: elasticbeanstalk
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'
  AWSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
  AWSIAMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AWSIAMRole
  AWSSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref AwsSnsNotificationEndpoint
          Protocol: "email"
  AWSLogsLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      RetentionInDays: 7
  AWSLogsLogGroupWebError:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.error.log
      RetentionInDays: 7
  AWSCWRequestErrorMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: 'ERROR
                      - com.newrelic.agent.ForceRestartException
                      - DEBUG
                      - INFO
                      - WARN
                      - "StatusLogger No log4j2 configuration file found"
                      - "StrictValidationHandler.handleErrors"
                      - "Strict upload validation error"
                      - org.hibernate'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Errors"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - RequestErrorCount
  AWSCWRequestErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - RequestErrorCount
      Namespace: LogMetrics/Errors
      Period: 3600
      Statistic: Sum
      Threshold: 10
  AWSCWWebErrorMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroupWebError
    Properties:
      LogGroupName: !Ref AWSLogsLogGroupWebError
      FilterPattern: 'Error'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Errors"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - WebErrorCount
  AWSCWWebErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - WebErrorCount
      Namespace: LogMetrics/Errors
      Period: 3600
      Statistic: Sum
      Threshold: 1
  AWSCWLostMessageMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: '"Error L"'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/LostMessages"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - LostMessageCount
  AWSCWRequestLostMessageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - LostMessageCount
      Namespace: LogMetrics/LostMessages
      Period: 3600
      Statistic: Sum
      Threshold: 1
  AWSCWRequestWarningMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: 'WARN
                      - "Establishing SSL connection"'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Warnings"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - RequestWarningCount
  AWSCWRequestWarningAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - RequestWarningCount
      Namespace: LogMetrics/Warnings
      Period: 3600
      Statistic: Sum
      Threshold: 100
  AWSCWThroughputExceptionMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: 'ProvisionedThroughputExceededException'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Exceptions"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ThroughputExceededExceptionCount
  AWSCWThroughputExceptionAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - ThroughputExceededExceptionCount
      Namespace: LogMetrics/Exceptions
      Period: 3600
      Statistic: Sum
      Threshold: 1
  AWSCW400MetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: '{ $.status = 400 }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/400s"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - 400Count
  AWSCW400Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - 400Count
      Namespace: LogMetrics/400s
      Period: 3600
      Statistic: Sum
      Threshold: 30
  AWSCW403MetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: '{ $.status = 403 }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/403s"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - 403Count
  AWSCW403Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - 403Count
      Namespace: LogMetrics/403s
      Period: 3600
      Statistic: Sum
      Threshold: 10
  AWSCW409MetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: '{ $.status = 409 }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/409s"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - 409Count
  AWSCW409Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - 409Count
      Namespace: LogMetrics/409s
      Period: 3600
      Statistic: Sum
      Threshold: 10
  AWSCW412MetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/web-1.log
      FilterPattern: '{( $.status = 412 ) && ( $.uri != "*/signIn*" ) && ( $.uri != "*/verifyEmail*" )}'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/412s"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - 412Count
  AWSCW412Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - 412Count
      Namespace: LogMetrics/412s
      Period: 3600
      Statistic: Sum
      Threshold: 30
  AWSCWCpuUtilizationAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 900
      Statistic: Average
      Threshold: 80
  AWSCWEnvironmentHealthAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: EnvironmentHealth
      Namespace: AWS/ElasticBeanstalk
      Period: 900
      Statistic: Maximum
      Threshold: 25
  AWSCWHealthCheckStatusAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      MetricName: HealthCheckStatus
      Namespace: AWS/Route53
      Dimensions:
        -
          "Name": "HealthCheckId"
          "Value": !Ref AWSR53HealthCheck
      Period: 300
      Statistic: Average
      Threshold: 1
  AWSLBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId: !Ref AwsDefaultVpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: '443'
          ToPort: '443'
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
          IpProtocol: tcp
  AWSEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: AWSLBSecurityGroup
    Properties:
      GroupName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - AWSEC2SecurityGroup
      GroupDescription: EC2 Security Group
      VpcId: !Ref AwsDefaultVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref AWSLBSecurityGroup
  AWSECacheSecurityGroup:
    Type: 'AWS::ElastiCache::SecurityGroup'
    Properties:
      Description: ElastiCache Security Group
  AWSECacheSecurityGroupIngress:
    Type: 'AWS::ElastiCache::SecurityGroupIngress'
    DependsOn:
      - AWSECacheSecurityGroup
      - AWSEC2SecurityGroup
    Properties:
      CacheSecurityGroupName: !Ref AWSECacheSecurityGroup
      EC2SecurityGroupName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - AWSEC2SecurityGroup
      EC2SecurityGroupOwnerId: !Ref 'AWS::AccountId'
  AWSECCacheCluster:
    Type: 'AWS::ElastiCache::CacheCluster'
    DependsOn: AWSECacheSecurityGroup
    Properties:
      Engine: redis
      CacheNodeType: !Ref ElastiCacheInstanceType
      NumCacheNodes: '1'
      CacheSecurityGroupNames:
        - !Ref AWSECacheSecurityGroup
  AWSCWDashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    Properties:
      DashboardName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - dashboard
      DashboardBody: !Join
        - ''
        - - >-
            {"widgets": [{ "type":"metric", "x":0, "y":0, "width":12,
            "height":6, "properties":{"metrics":[[ "AWS/EC2", "CPUUtilization",
            "AutoScalingGroupName","
          - !Ref AwsAutoScalingGroupName
          - '"]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300,
            "stat":"Average", "region":"us-east-1", "title":"CPUUtilization"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/EC2", "NetworkOut",
            "AutoScalingGroupName","
          - !Ref AwsAutoScalingGroupName
          - '"]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300,
            "region":"us-east-1", "title":"NetworkOut"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB", "HTTPCode_Backend_4XX",
            "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}],'
          - '[ "AWS/ELB", "HTTPCode_Backend_5XX", "LoadBalancerName","'
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}],'
          - '[ "AWS/ELB", "BackendConnectionErrors", "LoadBalancerName","'
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300, "stat":"Sum",
            "region":"us-east-1", "title":"BackendErrors"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB", "Latency",
            "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Average"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300,
            "stat":"Average", "region":"us-east-1", "title":"Latency"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB",
            "EstimatedALBActiveConnectionCount", "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300, "stat":"Sum",
            "region":"us-east-1", "title":"Connections"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB", "RequestCount",
            "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300, "stat":"Sum",
            "region":"us-east-1", "title":"Requests"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB", "HealthyHostCount",
            "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Maximum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300,
            "stat":"Maximum", "region":"us-east-1", "title":"HealthyHostCount"}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ElasticBeanstalk", "EnvironmentHealth",
            "EnvironmentName","
          - !Ref AWS::StackName
          - '", {"stat": "Maximum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300,
            "stat":"Maximum", "region":"us-east-1", "title":"EnvironmentHealth",
            "annotations": { "horizontal": [{ "label": "Severe", "value": 25 },
            { "label": "Degraded", "value": 20 }, { "label": "Warning", "value": 15 }]}}},
          - >-
            {"type":"metric", "x":0, "y":0, "width":12, "height":6,
            "properties":{"metrics":[[ "AWS/ELB", "HTTPCode_ELB_4XX",
            "LoadBalancerName","
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}],['
          - '"AWS/ELB", "HTTPCode_ELB_5XX", "LoadBalancerName","'
          - !Ref AwsLoadBalancerName
          - '", {"stat": "Sum"}]],'
          - >-
            "view": "timeSeries", "stacked": true, "period":300, "stat":"Sum",
            "region":"us-east-1", "title":"ClientErrors"}}]}
  IAMBridgepfS3ManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ListAccess
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref AttachmentBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadCmsCertBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadCmsPrivBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ConsentsBucket
          - Sid: ModAccess
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:DeleteObject'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadBucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref AttachmentBucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadCmsCertBucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref UploadCmsPrivBucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ConsentsBucket
                  - /*
  IAMBridgepfECManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Description: Provide full access to ElastiCache except for delete
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Deny
            Action:
              - elasticache:DeleteCacheCluster
              - elasticache:DeleteCacheParameterGroup
              - elasticache:DeleteCacheSecurityGroup
              - elasticache:DeleteCacheSubnetGroup
              - elasticache:DeleteReplicationGroup
              - elasticache:DeleteSnapshot
            Resource: "*"
          - Effect: Allow
            Action:
              - elasticache:*
            Resource: "*"
  IAMBridgepfSQSManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Description: Provide full access to SQA except for create
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Deny
            Action:
              - sqs:CreateQueue
            Resource: "*"
          - Effect: Allow
            Action:
              - sqs:*
            Resource: "*"
  # App Service User
  AWSIAMBridgepfServiceUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref AWSIAMBridgepfServiceUser
  AWSIAMBridgepfServiceUser:
    Type: 'AWS::IAM::User'
    Properties:
      Groups:
        - !Ref AWSIAMBridgepfServiceUserGroup
  AWSIAMBridgepfServiceUserGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - !Ref IAMBridgepfS3ManagedPolicy
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - !Ref IAMBridgepfECManagedPolicy
        - !Ref IAMBridgepfSQSManagedPolicy
